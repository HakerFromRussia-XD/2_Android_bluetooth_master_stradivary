Index: app/src/main/java/com/bailout/stickk/ubi4/ui/fragments/account/prosthesisInformationFragmentUBI4/AccountFragmentProsthesisInformationUBI4.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.bailout.stickk.ubi4.ui.fragments.account.prosthesisInformationFragmentUBI4\n\nimport android.content.Context\nimport android.os.Bundle\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport android.widget.Toast\nimport androidx.fragment.app.Fragment\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport androidx.recyclerview.widget.RecyclerView\nimport com.bailout.stickk.databinding.FragmentPersonalAccountProsthesisInformationBinding\nimport com.bailout.stickk.databinding.Ubi4FragmentPersonalAccountProsthesisInformationBinding\nimport com.bailout.stickk.new_electronic_by_Rodeon.WDApplication\nimport com.bailout.stickk.new_electronic_by_Rodeon.connection.Requests\nimport com.bailout.stickk.new_electronic_by_Rodeon.persistence.preference.PreferenceKeys\nimport com.bailout.stickk.new_electronic_by_Rodeon.ui.activities.helps.navigator\nimport com.bailout.stickk.new_electronic_by_Rodeon.ui.activities.main.MainActivity\nimport com.bailout.stickk.new_electronic_by_Rodeon.utils.EncryptionManagerUtils\nimport com.bailout.stickk.ubi4.contract.NavigatorUBI4\nimport com.bailout.stickk.ubi4.persistence.preference.PreferenceKeysUBI4\nimport com.bailout.stickk.ubi4.ui.main.MainActivityUBI4\nimport com.google.gson.Gson\nimport com.simform.refresh.SSPullToRefreshLayout\nimport kotlinx.coroutines.CoroutineScope\nimport kotlinx.coroutines.Dispatchers\nimport kotlinx.coroutines.launch\nimport kotlin.properties.Delegates\n\nclass AccountFragmentProsthesisInformationUBI4 : Fragment() {\n    private var mContext: Context? = null\n    private var main: MainActivityUBI4? = null\n    private var linearLayoutManager: LinearLayoutManager? = null\n    private var adapter: AccountProsthesisInformationAdapterUBI4? = null\n\n    private var token = \"\"\n    private var gson: Gson? = null\n    private var encryptionManager: EncryptionManagerUtils? = null\n    private var encryptionResult: String? = null\n    private var testSerialNumber = \"FEST-F-05670\"\n    private var myRequests: Requests? = null\n\n    private lateinit var binding: Ubi4FragmentPersonalAccountProsthesisInformationBinding\n\n    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View {\n        binding = Ubi4FragmentPersonalAccountProsthesisInformationBinding.inflate(layoutInflater)\n        WDApplication.component.inject(this)\n        if (activity != null) { main = activity as MainActivityUBI4? }\n        this.mContext = context\n//        testSerialNumber = main?.mDeviceName.toString()\n\n        val deviceName = main?.mDeviceName\n        testSerialNumber = deviceName\n            .takeIf { !it.isNullOrBlank() && it.startsWith(\"FEST-\") }\n            ?: testSerialNumber\n\n        System.err.println(\"TEST SERIAL NUMBER $testSerialNumber\")\n        return binding.root\n    }\n\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n        super.onViewCreated(view, savedInstanceState)\n        gson = Gson()\n        myRequests = Requests()\n        encryptionManager = EncryptionManagerUtils.instance\n        encryptionResult = encryptionManager?.encrypt(testSerialNumber)\n\n        accountProsthesisInformationList = ArrayList()\n//        requestToken()\n        binding.refreshLayout.setLottieAnimation(\"loader_3.json\")\n        binding.refreshLayout.setRepeatMode(SSPullToRefreshLayout.RepeatMode.REPEAT)\n        binding.refreshLayout.setRepeatCount(SSPullToRefreshLayout.RepeatCount.INFINITE)\n        binding.refreshLayout.setOnRefreshListener {\n//            requestToken()\n            binding.refreshLayout.setRefreshing(false)\n        }\n\n\n        initializeUI()\n\n        accountProsthesisInformationList.clear()\n        accountProsthesisInformationList.add(\n            AccountProsthesisInformationItemUBI4(\n                prosthesisModel = main?.loadText(PreferenceKeysUBI4.ACCOUNT_MODEL_PROSTHESIS).toString(),\n                prosthesisSize = main?.loadText(PreferenceKeysUBI4.ACCOUNT_SIZE_PROSTHESIS).toString(),\n                handSide = main?.loadText(PreferenceKeysUBI4.ACCOUNT_SIDE_PROSTHESIS).toString(),\n                rotatorType = main?.loadText(PreferenceKeysUBI4.ACCOUNT_ROTATOR_PROSTHESIS).toString(),\n                touchscreenFingerPads = main?.loadText(PreferenceKeysUBI4.ACCOUNT_TOUCHSCREEN_FINGERS_PROSTHESIS).toString(),\n                batteryType = main?.loadText(PreferenceKeysUBI4.ACCOUNT_ACCUMULATOR_PROSTHESIS).toString())\n        )\n        initAdapter(binding.accountProsthesisInformationRv)\n    }\n\n    private fun requestToken() {\n        CoroutineScope(Dispatchers.Main).launch {\n            myRequests!!.getRequestToken(\n                { token ->\n                    this@AccountFragmentProsthesisInformationUBI4.token = token\n//                    requestUserData()\n                },\n                { error -> main?.runOnUiThread {Toast.makeText(mContext, error, Toast.LENGTH_SHORT).show()}},\n                \"Aesserial $encryptionResult\")\n        }\n    }\n    private fun initAdapter(accountRv: RecyclerView) {\n        linearLayoutManager = LinearLayoutManager(mContext)\n        linearLayoutManager!!.orientation = LinearLayoutManager.VERTICAL\n        accountRv.layoutManager = linearLayoutManager\n        adapter = AccountProsthesisInformationAdapterUBI4()\n        accountRv.adapter = adapter\n    }\n    private fun initializeUI() {\n        binding.titleClickBlockBtn.setOnClickListener {  }\n        initAdapter(binding.accountProsthesisInformationRv)\n\n        binding.backBtn.setOnClickListener {\n            (activity as? NavigatorUBI4)?.goingBackUbi4() ?:\n            println(\"Activity не реализует NavigatorUBI4\")\n        }\n    }\n\n    companion object {\n        var accountProsthesisInformationList by Delegates.notNull<ArrayList<AccountProsthesisInformationItemUBI4>>()\n    }\n}
===================================================================
diff --git a/app/src/main/java/com/bailout/stickk/ubi4/ui/fragments/account/prosthesisInformationFragmentUBI4/AccountFragmentProsthesisInformationUBI4.kt b/app/src/main/java/com/bailout/stickk/ubi4/ui/fragments/account/prosthesisInformationFragmentUBI4/AccountFragmentProsthesisInformationUBI4.kt
--- a/app/src/main/java/com/bailout/stickk/ubi4/ui/fragments/account/prosthesisInformationFragmentUBI4/AccountFragmentProsthesisInformationUBI4.kt	
+++ b/app/src/main/java/com/bailout/stickk/ubi4/ui/fragments/account/prosthesisInformationFragmentUBI4/AccountFragmentProsthesisInformationUBI4.kt	
@@ -9,13 +9,9 @@
 import androidx.fragment.app.Fragment
 import androidx.recyclerview.widget.LinearLayoutManager
 import androidx.recyclerview.widget.RecyclerView
-import com.bailout.stickk.databinding.FragmentPersonalAccountProsthesisInformationBinding
 import com.bailout.stickk.databinding.Ubi4FragmentPersonalAccountProsthesisInformationBinding
 import com.bailout.stickk.new_electronic_by_Rodeon.WDApplication
 import com.bailout.stickk.new_electronic_by_Rodeon.connection.Requests
-import com.bailout.stickk.new_electronic_by_Rodeon.persistence.preference.PreferenceKeys
-import com.bailout.stickk.new_electronic_by_Rodeon.ui.activities.helps.navigator
-import com.bailout.stickk.new_electronic_by_Rodeon.ui.activities.main.MainActivity
 import com.bailout.stickk.new_electronic_by_Rodeon.utils.EncryptionManagerUtils
 import com.bailout.stickk.ubi4.contract.NavigatorUBI4
 import com.bailout.stickk.ubi4.persistence.preference.PreferenceKeysUBI4
@@ -48,9 +44,9 @@
         if (activity != null) { main = activity as MainActivityUBI4? }
         this.mContext = context
 //        testSerialNumber = main?.mDeviceName.toString()
-
         val deviceName = main?.mDeviceName
         testSerialNumber = deviceName
+            //TODO убрать фильтр серийного номера
             .takeIf { !it.isNullOrBlank() && it.startsWith("FEST-") }
             ?: testSerialNumber
 
@@ -109,6 +105,7 @@
         adapter = AccountProsthesisInformationAdapterUBI4()
         accountRv.adapter = adapter
     }
+
     private fun initializeUI() {
         binding.titleClickBlockBtn.setOnClickListener {  }
         initAdapter(binding.accountProsthesisInformationRv)
